Create a Windows VHDX Boot Entry on Linux or macOS
--------------------------------------------------

1. Create an empty virtual disk using the qemu-img utility.
   a. qemu-img create -f vhdx -o block_state_zero=off,subformat=fixed windows.vhdx <size>
   b. dd if=windows_sparse.vhdx of=windows_unsparse.vhdx conv=notrunc bs=1m (Required if NTFS driver creates sparse files.)
   
2. Attach the virtual disk to an nbd or block device.
   a. Linux: attach-vhdx windows.vhdx
   b. macOS: attach-vhdx -m windows.vhdx
   
3. Partition and format virtual disk as a single NTFS volume.

   Linux: (specify fdisk geometry)
   a. sudo fdisk /dev/nbd#
   b. sudo fdisk -l -u=cylinders /dev/nbd#
   c. sudo mkntfs -Q -L "Windows VHD" -p <start_sector> -H <fdisk_heads> -S <fdisk_sectors/track> /dev/nbd#p#

   macOS: (NTFS format/write support required)
   a. diskutil eraseDisk <NTFS_VENDOR> Windows\ VHD <GPT/MBR> disk#
   b. Apply a Windows Disk Signature if using MBR scheme.
   
4. Mount the Windows install DVD and examine the index list.
   a. Linux: wiminfo /media/$USER/<Win_DVD_Label>/sources/install.wim
   b. macOS: wiminfo /Volumes/<Win_DVD_Label>/sources/install.wim
   
5. Apply a Windows install image to the block device.
   a. Linux: sudo wimapply /media/$USER/<Win_DVD_Label>/sources/install.wim <index> <device>
   b. macOS: sudo wimapply /Volumes/<Win_DVD_Label>/sources/install.wim <index> <device>
   
6. Mount the virtual disk, view its contents to confirm success, then unmount it.

7. Detach the virtual disk from the nbd or block device.
   a. Linux: detach-vhdx /dev/nbd#
   b. macOS: hdiutil eject disk#
   
8. Create or update the Windows boot files.
   a. bcd-sys windows.vhdx
   
NOTES:

i.   The steps above are to be performed on a physical disk with an NTFS volume for the VHDX files. A system partition on the same disk is recommended.
ii.  When creating a VHDX file on an NTFS volume supporting sparse files step 1b can be used as a workaround to prevent Windows errors caused by file holes.
iii. Partitioning and formatting of physical media and virtual disks is recommended to be performed under Linux or macOS. (Tuxera or Paragon NTFS drivers)
iv.  Only a fixed size VHDX image is supported under macOS since we can only attach the payload as a raw disk image. Both types are supported under Linux.
